#!/bin/sh

#/***************************************************************************
# *   Copyright (C) 2008 by Alexander Saal                                  *
# *   alex.saal@gmx.de                                                      *
# *                                                                         *
# *   File: configure                                                       *
# *   Desc: Script to configure the dm-system                               *
# *                                                                         *
# *   This file is part of DMS - Documnet Management System                 *
# *                                                                         *
# ***************************************************************************/

clear

if [ "$1" = "--help" ]; then
echo "Usage: configure"
echo "--help this help"
echo "--version display version"
echo "--enabled-scan enable scan support (default is no)"
exit 0
fi

if [ "$1" = "--version" ]; then
echo "DMS v0.1.0.1"
exit 0
fi

# Use sane backend for scanning
if [ "$1" = "--enabled-scan" ]; then
	sane_config="`which sane-config`"
else
	sane_config=""
fi

# Checking for Qt...
echo "Configurescript for DMS 0.1.0.1"
echo
printf "Checking for qmake... "
qmake="`which qmake`"
qmake_qt4="`which qmake-qt4`"
tmp_qmake=""

if [ "$qmake" = "" ] && [ "$qmake_qt4" = "" ]; then
	echo "not found!"
	echo
	echo "Make sure you have the Qt development packages installed!"
	exit 1
elif [ "$qmake" != "" ]; then
	tmp_qmake=$qmake
	echo $tmp_qmake
elif [ "$qmake_qt4" != "" ]; then
	tmp_qmake=$qmake_qt4
	echo $tmp_qmake
fi

printf "Checking for lupdate... "
lupdate="`which lupdate`"
lupdate_qt4="`which lupdate-qt4`"
tmp_lupdate=""

if [ "$lupdate" = "" ] && [ "$lupdate_qt4" = "" ]; then
	echo "not found!"
	echo
	echo "Make sure you have the Qt development packages installed!"
	exit 1
elif [ "$lupdate" != "" ]; then
	tmp_lupdate=$lupdate
	echo $tmp_lupdate
elif [ "$lupdate_qt4" != "" ]; then
	tmp_lupdate=$lupdate_qt4
	echo $tmp_lupdate
fi

printf "Checking for lrelease... "
lrelease="`which lrelease`"
lrelease_qt4="`which lrelease-qt4`"
tmp_lrelease=""

if [ "$lrelease" = "" ] && [ "$lrelease_qt4" = "" ]; then
	echo "not found!"
	echo
	echo "Make sure you have the Qt development packages installed!"
	exit 1
elif [ "$lrelease" != "" ]; then
	tmp_lrelease=$lrelease
	echo $tmp_lrelease
elif [ "$lrelease_qt4" != "" ]; then
	tmp_lrelease=$lrelease_qt4
	echo $tmp_lrelease
fi

printf "Checking for qmake version... "
$tmp_qmake -v &>qmake.ver
ver=`sed 's/[a-z,A-Z].//g' qmake.ver | sed -n '1,1p'`
if [ "$ver" = " 1.07( 3.3.6)" ]; then
	echo $ver;
	echo
	echo "version too old! Make sure you have the Qt 4.3.x installed!"
	rm -rf qmake.ver
	exit 1
else
	echo $ver;
	rm -rf qmake.ver
fi

printf "Checking for lupdate version... "
$tmp_lupdate -version &>lupdate.ver
ver=`sed 's/[a-z,A-Z].//g' lupdate.ver | sed -n '1,1p'`
if [ "$ver" = "3.3.6" ]; then
	echo $ver;
	echo
	echo "version too old! Make sure you have the Qt 4.3.x installed!"
	rm -rf lupdate.ver
	exit 1
else
	echo $ver;
	#$tmp_lupdate dboxfe.pro
	rm -rf lupdate.ver
fi

printf "Checking for lrelease version... "
$tmp_lrelease -version &>lrelease.ver
ver=`sed 's/[a-z,A-Z].//g' lrelease.ver | sed -n '1,1p'`
if [ "$ver" = "3.3.6" ]; then
	echo $ver;
	echo
	echo "version too old! Make sure you have the Qt 4.3.x installed!"
	rm -rf lrealse.ver
	exit 1
else
	echo $ver;
	#$tmp_lrelease dboxfe.pro
	rm -rf lrelease.ver
fi

createNormalMakefile()
{
	# Now create the makefile
	cd libdms && $tmp_qmake -o Makefile libdms.pro && cd ../dms && $tmp_qmake -o Makefile dms.pro
	if [ $? -eq 0 ]; then
		echo
		echo Good - your configure finished. Start make now.
		echo
		echo You can use the follow commands for create a
		echo binary:
		echo "        cd libdms"
		echo "        make -f Makefile"
		echo "        cd ../dms"
		echo "        make -f Makefile"
		echo "        cd ../bin"
		echo "        ./dms"
		echo
		exit 0
	else 
		exit 1
	fi
}

createSaneMakefile()
{
	# Now create the makefile
	$tmp_qmake -o Makefile dms.pro
	if [ $? -eq 0 ]; then
		echo
		echo Good - your configure finished. Start make now.
		echo
		echo You can use the follow commands for create a
		echo binary:
		echo "        make -f Makefile"
		echo "        cd bin"
		echo "        ./dms"
		echo
		exit 0
	else 
		exit 1
	fi
}

if [ "$sane_config" != "" ]; then
	printf "Checking for sane version ... "
	sane_version_in_use=1019
	sane_version=`$sane_config --version | sed 's/[.]//g'`	
	if [  $sane_version_in_use -ge $sane_version ]; then
		echo `$sane_config --version`
		createSaneMakefile
	else
		echo
		echo "SANE is too old! Make sure you have the SANE >= 1.0.19 installed!"
		exit 1
	fi
else
	createNormalMakefile
fi
